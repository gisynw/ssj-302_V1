<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ArcGIS JavaScript API Tutorial</title>
    <link rel="stylesheet" href="https://js.arcgis.com/4.25/esri/themes/light/main.css">
    <script src="https://js.arcgis.com/4.25/"></script>
</head>
<body>
    <div id="viewDiv" style="height: 100vh;"></div>
    <script>
        require([
            "esri/Map",
            "esri/views/MapView",
            "esri/layers/FeatureLayer",
            "esri/widgets/LayerList",
            "esri/widgets/Legend"
        ], function (Map, MapView, FeatureLayer, LayerList, Legend) {
            var map = new Map({
                basemap: "topo-vector",
            });

            const view = new MapView({
                container: "viewDiv",
                map: map,
                center: [-118.70543, 34.10700],
                zoom: 12
            });

            const trailheadsRenderer = {
                "type": "simple",
                "symbol": {
                    "type": "picture-marker",
                    "url": "http://static.arcgis.com/images/Symbols/NPS/npsPictograph_0231b.png",
                    "width": "18px",
                    "height": "18px"
                }
            };

            const trailheadsLabels = {
                symbol: {
                    type: "text",
                    color: "#FFFFFF",
                    haloColor: "#5E8D74",
                    haloSize: "2px",
                    font: {
                        size: "12px",
                        family: "Noto Sans",
                        style: "italic",
                        weight: "normal"
                    }
                },
                labelPlacement: "above-center",
                labelExpressionInfo: {
                    expression: "$feature.TRL_NAME"
                }
            };

            // Define a pop-up for Trailheads
            const popupTrailheads = {
                "title": "Trailhead",
                "content": 
                "<b>Trail:</b> {TRL_NAME}<br>\
                <b>City:</b> {CITY_JUR}<br>\
                <b>Cross Street:</b> {X_STREET}<br>\
                <b>Parking:</b> {PARKING}<br>\
                <b>Elevation:</b> {ELEV_FT} ft"
            }

            // Trailheads feature layer (points)
            const trailheads = new FeatureLayer({
                url: "https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trailheads/FeatureServer/0",
                renderer: trailheadsRenderer,
                labelingInfo: [trailheadsLabels],
                outFields: ["TRL_NAME","CITY_JUR","X_STREET","PARKING","ELEV_FT"],
                popupTemplate: popupTrailheads
            });

            // Trails feature layer (lines)
            const trailsRenderer = {
                type: "simple",
                symbol: {
                    color: "#BA55D3",
                    type: "simple-line",
                    style: "solid"
                },
                visualVariables: [
                    {
                        type: "size",
                        field: "ELEV_GAIN",
                        minDataValue: 0,
                        maxDataValue: 2300,
                        minSize: "3px",
                        maxSize: "7px"
                    }
                ]
            };

            // Display a chart
            // Define a popup for Trails
            const popupTrails = {
                title: "Trail Information",
                content: [{
                type: "media",
                mediaInfos: [{
                    type: "line-chart",
                    caption: "",
                    value: {
                    fields: [ "ELEV_MIN","ELEV_MAX" ],
                    normalizeField: null,
                    tooltipField: "Min and max elevation values"
                    }
                    }]
                }]
            }

            const trailsLayer = new FeatureLayer({
                url: "https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Trails/FeatureServer/0",
                renderer: trailsRenderer,
                opacity: 0.75,
                outFields: ["TRL_NAME","ELEV_GAIN"],
                popupTemplate: popupTrails
            });

            // Parks and open spaces (polygons)
            const bikeTrailsRenderer = {
                type: "simple",
                symbol: {
                    type: "simple-line",
                    style: "short-dot",
                    color: "#FF91FF",
                    width: "1px"
                }
            };

            const parksLayer = new FeatureLayer({
                url: "https://services3.arcgis.com/GVgbJbqm8hXASVYi/arcgis/rest/services/Parks_and_Open_Space/FeatureServer/0",
                renderer: bikeTrailsRenderer,
                definitionExpression: "USE_BIKE = 'YES'"
            });

            map.add(trailheads);
            map.add(trailsLayer, 0);
            map.add(parksLayer, 0);

            view.on("click", function (event) {
                view.hitTest(event).then(function (response) {
                  if (response.results.length > 0) {
                    const graphic = response.results.filter((result) => {
                      return (
                        result.graphic.layer === trailheads ||
                        result.graphic.layer === trailsLayer ||
                        result.graphic.layer === parksLayer
                      );
                    })[0].graphic;
              
                    if (graphic) {
                      view.goTo({
                        target: graphic.geometry,
                        zoom: 15,
                      });
              
                      view.popup.open({
                        features: [graphic],
                        location: event.mapPoint,
                      });
                    }
                  } else {
                    view.goTo(originalView);
                    view.popup.close();
                  }
                });
              });
        });
    </script>
</body>
</html>
