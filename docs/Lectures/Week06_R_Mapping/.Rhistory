) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
palette
#
if (!require('scico')) install.packages('scico')
library('scico')
tf_water$surv_type_f = as.factor(tf_water$SURVEYTYPE)
palette <- colorFactor(palette = "scico", domain = tf_water$surv_type_f)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
color = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1                   # Set stroke weight
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1                   # Set stroke weight
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
palette(surv_type_f)
~palette(surv_type_f)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000"
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
#
if (!require('scico')) install.packages('scico')
library('scico')
tf_water$surv_type_f = as.factor(tf_water$SURVEYTYPE)
palette <- colorFactor(palette = "mpalette", domain = tf_water$surv_type_f)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000"
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
#
if (!require('scico')) install.packages('scico')
library('scico')
tf_water$surv_type_f = as.factor(tf_water$SURVEYTYPE)
palette <- colorFactor(palette = "viridis", domain = tf_water$surv_type_f)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000"
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
#
if (!require('awtools')) install.packages('awtools')
library('awtools')
#
devtools::install_github("awhstin/awtools")
library('awtools')
tf_water$surv_type_f = as.factor(tf_water$SURVEYTYPE)
palette <- colorFactor(palette = "mpalette", domain = tf_water$surv_type_f)
#
#devtools::install_github("awhstin/awt/ools")
library('awtools')
tf_water$surv_type_f = as.factor(tf_water$SURVEYTYPE)
palette <- colorFactor(palette = "mpalette", domain = tf_water$surv_type_f)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000"
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
#
#devtools::install_github("awhstin/awt/ools")
library('awtools')
tf_water$surv_type_f = as.factor(tf_water$SURVEYTYPE)
palette <- colorFactor(palette = "awtools", domain = tf_water$surv_type_f)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000"
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
tf_water$surv_type_f
levels(tf_water$surv_type_f)
na.omit(tf_water$surv_type_f)
na.omit(tf_water$SURVEYTYPE)
mpalette
#
#devtools::install_github("awhstin/awt/ools")
library('awtools')
tf_water$surv_type_f = as.factor(tf_water$SURVEYTYPE)
palette <- colorFactor(palette = mpalette, domain = tf_water$surv_type_f)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000"
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Category",          # Legend title
opacity = 1
)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000"
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Survive Type",          # Legend title
opacity = 1
)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000",
label = tf_water$surv_type_f
) %>%
addLegend(
"bottomright",               # Legend position
pal = palette,               # Palette used
values = ~surv_type_f,          # Values in the 'category' column
title = "Survive Type",          # Legend title
opacity = 1
)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette(surv_type_f),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000",
label = tf_water$surv_type_f
)
water_pond = read_sf('F:\\Clark_Universiy\\Clark_Teaching\\Git_Repo\\ssj-30262\\docs\\Lectures\\Week06_R_Mapping\Lakes_Ponds_Rivers\\Lakes_Ponds_Rivers.shp')
water_pond = read_sf('F:\\Clark_Universiy\\Clark_Teaching\\Git_Repo\\ssj-30262\\docs\\Lectures\\Week06_R_Mapping\\Lakes_Ponds_Rivers\\Lakes_Ponds_Rivers.shp')
tf_pond <- st_transform(water_pond, crs = '+proj=longlat +datum=WGS84')
leaflet() %>%
addPolygons(data = tf_pond, opacity = 0.8)
leaflet() %>%
addPolygons(data = tf_pond)
leaflet() %>%
addPolygons(data = tf_pond,opacity = 0)
leaflet() %>%
addProviderTiles(
"OpenTopoMap",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0)
leaflet() %>%
addProviderTiles(
"Stadia.AlidadeSmoothDark",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0)
leaflet() %>%
addProviderTiles(
"Stadia.AlidadeSatellite",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0, color = 'dark blue')
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0, color = 'blue')
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0, fillcolor = 'red')
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0, color = 'red')
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0, color = 'red', label = tf_pond$NAME)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,opacity = 0, color = 'navy', label = tf_pond$NAME)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond, color = 'navyblue', label = tf_pond$NAME)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond, fillColor = 'navyblue', color = "black", label = tf_pond$NAME)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond, fillColor = 'navyblue', color = "black", label = tf_pond$NAME,weight = 0.5)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond, fillColor = 'navyblue', color = "black", label = tf_pond$NAME,weight = 0.5, fillOpacity = 1)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,  color = "navyblue", label = tf_pond$NAME,weight = 0.5, fillOpacity = 1)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,  color = "navyblue", label = tf_pond$NAME, fillOpacity = 1)
leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "OpenTopo"
) %>%
addPolygons(data = tf_pond,  color = "blue", label = tf_pond$NAME, fillOpacity = 1)
print('your name')
# if (!require('leaflet')) install.packages('leaflet')
#
# library(leaflet)
print("hellp")
install.packages("raster")
if (!require('leaflet')) install.packages('leaflet')
library(leaflet)
detach("package:leaflet", unload = TRUE)
library(leaflet)
detach("package:leaflet", unload = TRUE)
if (!require('leaflet')) install.packages('leaflet')
library(leaflet)
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
)
basemap
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
addProviderTiles("OpenTopoMap",group = 'Topology')
basemap
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
addProviderTiles("OpenTopoMap",group = 'Topology')
basemap
basemap %>% setView(lng = -71.81, lat = 42.27, zoom = 15)
gc()
basemap <- leaflet() %>%
addProviderTiles(
"CartoDB.Positron",
group = "CartoDB"
)  %>%
addProviderTiles(
"OpenStreetMap",
# give the layer a name
group = "OpenStreetMap"
) %>%
addProviderTiles("OpenTopoMap",group = 'Topology')
basemap
basemap %>% setView(lng = -71.81, lat = 42.27, zoom = 15)
basemap
zoom_basemap = basemap %>% setView(lng = -71.81, lat = 42.27, zoom = 15)
zoom_basemap = basemap %>% setView(lng = -71.81, lat = 42.27, zoom = 15)
zoom_basemap
zoom_basemap %>% addLayersControl(baseGroups = c('Topology', "OpenStreetMap","CartoDB"),
position = 'topleft')
basemap %>%
addMarkers(lat = 42.252,
lng =  -71.824,
label = "Clark")
icon.home <- makeAwesomeIcon(
icon = "university", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Clark",
icon = icon.home
)
icon.home <- makeAwesomeIcon(
icon = "home", markerColor = "blue",
library = "fa",
iconColor = "white"
)
basemap %>%
addAwesomeMarkers(
lat = 42.252,
lng =  -71.824,
label = "Clark",
icon = icon.home
)
setwd("M:\\Github_repo\\ssj-30262\\docs\\Lectures\\Week06_R_Mapping")
parks = read.csv('parks.csv')
head(parks)
View(parks)
basemap %>% addMarkers(lng = parks$y, lat = parks$x)
basemap %>% addMarkers(lng = parks$x, lat = parks$y)
basemap %>% addMarkers(lng = parks$x, lat = parks$y,label = parks$park_name)
icons_list <- icons(iconUrl = 'https://raw.githubusercontent.com/gisynw/ssj-30262/refs/heads/main/docs/Lectures/Week06_R_Mapping/trees.png', iconWidth = 50, iconHeight = 50)
basemap %>% addMarkers(lng = parks$x, lat = parks$y, icon = icons_list)
icons_list <- icons(iconUrl = 'https://raw.githubusercontent.com/gisynw/ssj-30262/refs/heads/main/docs/Lectures/Week06_R_Mapping/trees.png', iconWidth = 50, iconHeight = 50)
basemap %>% addMarkers(lng = parks$x, lat = parks$y, icon = icons_list, label = parks$park_name)
icons_list <- icons(iconUrl = 'https://raw.githubusercontent.com/gisynw/ssj-30262/refs/heads/main/docs/Lectures/Week06_R_Mapping/trees.png', iconWidth = 5, iconHeight = 5)
basemap %>% addMarkers(lng = parks$x, lat = parks$y, icon = icons_list, label = parks$park_name)
icons_list <- icons(iconUrl = 'https://raw.githubusercontent.com/gisynw/ssj-30262/refs/heads/main/docs/Lectures/Week06_R_Mapping/trees.png', iconWidth = 20, iconHeight = 20)
basemap %>% addMarkers(lng = parks$x, lat = parks$y, icon = icons_list, label = parks$park_name)
basemap %>% addMarkers(lng = parks$x, lat = parks$y, icon = icons_list, popup = parks$park_name )
print(c('projection of basemap: ',  basemap$x$options$crs$crsClass))
print(c('projection of basemap: ',  basemap$x$options$crs$crsClass))
library(sf)
setwd('M:/Github_repo/ssj-30262/docs/Lectures/Week06_R_Mapping/water_quality_station')
water_quality = read_sf('worcester_station.shp')
print(c("original coordinate system:" , st_crs(water_quality)$epsg))
# tf_water <- st_transform(water_quality, crs = '+proj=longlat +datum=WGS84')
# print(tf_water$geometry)
library(sf)
setwd('M:/Github_repo/ssj-30262/docs/Lectures/Week06_R_Mapping/water_quality_station')
water_quality = read_sf('worcester_station.shp')
print(c("original coordinate system:" , st_crs(water_quality)$epsg))
tf_water <- st_transform(water_quality, crs = '+proj=longlat +datum=WGS84')
print(tf_water$geometry)
unique(tf_water$SURVEYTYPE)
devtools::install_github("awhstin/awt/ools")
devtools::install_github("awhstin/awt/awtools")
devtools::install_github("awhstin/awtools")
library('awtools')
palette_pts <- colorFactor(palette = mpalette, domain = tf_water$SURVEYTYPE)
# devtools::install_github("awhstin/awtools")
library('awtools')
palette_pts <- colorFactor(palette = mpalette, domain = tf_water$SURVEYTYPE)
# devtools::install_github("awhstin/awtools")
library('awtools')
palette_pts <- colorFactor(palette = mpalette, domain = tf_water$SURVEYTYPE)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette_pts(SURVEYTYPE),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000",
label = tf_water$SURVEYTYPE
)
leaflet(data = tf_water) %>%
addTiles() %>%  # Add a basemap
addCircleMarkers(
fillColor  = ~palette_pts(SURVEYTYPE),  # Color based on the 'category' column
fillOpacity = 0.8,           # Adjust opacity
radius = 5,                  # Set marker size
stroke = TRUE,               # Add stroke to the markers
weight = 1,                   # Set stroke weight
color = "#000000",
label = tf_water$SURVEYTYPE
) %>%
addLegend(data = tf_water,
position = "bottomright",
pal = palette_pts,
values = ~SURVEYTYPE,
title = "Survey Type",
opacity = 1)
